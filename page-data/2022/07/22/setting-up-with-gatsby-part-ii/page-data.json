{"componentChunkName":"component---src-pages-mdx-slug-js","path":"/2022/07/22/setting-up-with-gatsby-part-ii/","result":{"data":{"mdx":{"frontmatter":{"title":"Setting Up a Dev Blog With Gatsby in 2022, Part II","date":"July 22, 2022"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Setting Up a Dev Blog With Gatsby in 2022, Part II\",\n  \"date\": \"2022-07-22T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Setting Up a Dev Blog with Gatsby in 2022, Part II: Deployment\"), mdx(\"p\", null, \"Today we will deploying the new Gatsby-based dev blog that we just finished setting up.\"), mdx(\"br\", null), mdx(\"h2\", null, \"1. What We Want: Automatic Builds\"), mdx(\"hr\", null), mdx(\"p\", null, \"The main thing we want is some kind of setup where merging changes to our git repository runs our build process and rebuilds our static assets. After a very brief period of reflection we have decided to deploy our blog using Github Pages. Given there are no secrets in our project, the repository can be public.\"), mdx(\"h2\", null, \"2. Create a repo on Github\"), mdx(\"hr\", null), mdx(\"p\", null, \"A new, empty repository was created on Github at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jonkers3/dev-blog\"\n  }, \"https://github.com/jonkers3/dev-blog\"), \".\"), mdx(\"h2\", null, \"3. Setup our git remote\"), mdx(\"hr\", null), mdx(\"p\", null, \"First, we just need to commit our initial changes:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"git commit -a -m 'Initial Commit'\\n\")), mdx(\"p\", null, \"Now, add a git remote pointing to our Github repository.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"git remote add origin git@github.com:jonkers3/dev-blog.git\\n\")), mdx(\"h2\", null, \"4. Setup SSH for Github\"), mdx(\"hr\", null), mdx(\"p\", null, \"Create an SSH key\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"ssh-keygen -t ed25519 -C 'me@myemail.com'\\n\")), mdx(\"p\", null, \"Add it to your SSH agent:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"eval \\\"$(ssh-agent -s)\\\"\\nssh-add ~/.ssh/id_ed25519\\n\")), mdx(\"p\", null, \"Copy the public key to your clipboard:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"cat ~/.ssh/id_ed25519.pub\\n\")), mdx(\"p\", null, \"Add the SSH key to your Github account \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"github.com/settings/ssh/new\"\n  }, \"Add SSH Key\")), mdx(\"p\", null, \"We should now be able to authenticate with Github via SSH. This can be verified by running the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"ssh -T git@github.com\\n\")), mdx(\"p\", null, \"The final step to push our code to Github is this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"git push --set-upstream origin master\\n\")), mdx(\"p\", null, \"For the time being, we can just commit directly to the master branch. Certainly there are many other ways we could be using git, but for the moment, this actually suits our needs quite well.\"), mdx(\"p\", null, \"We commit our changes, call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git push\"), \", and all of our changes are pushed to Github instantly.\"), mdx(\"p\", null, \"And that is where things are at now: our files are live in our Github repository.\"), mdx(\"h2\", null, \"5. Setup Github Pages\"), mdx(\"hr\", null), mdx(\"p\", null, \"Let's give Github actions a try. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/marketplace/actions/github-pages-action\"\n  }, \"This template\"), \" appears to be more or less what we want. It provides an example for Gatsby, which seems to get us most of the way there. Create the following file.\"), mdx(\"h4\", null, mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \".github/workflows/gh-pages.js\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"name: GitHub Pages\\n\\non:\\n  push:\\n    branches:\\n      - master\\n  pull_request:\\n\\njobs:\\n  deploy:\\n    runs-on: ubuntu-20.04\\n    permissions:\\n      contents: write\\n    concurrency:\\n      group: ${{ github.workflow }}-${{ github.ref }}\\n    steps:\\n      - uses: actions/checkout@v3\\n\\n      - name: Setup Node\\n        uses: actions/setup-node@v3\\n        with:\\n          node-version: '18'\\n\\n      - name: Cache dependencies\\n        uses: actions/cache@v2\\n        with:\\n          path: ~/.npm\\n          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}\\n          restore-keys: |\\n            ${{ runner.os }}-node-\\n\\n      - run: npm ci\\n      - run: npm run build\\n\\n      - name: Deploy\\n        uses: peaceiris/actions-gh-pages@v3\\n        if: ${{ github.ref == 'refs/heads/master' }}\\n        with:\\n          github_token: ${{ secrets.GITHUB_TOKEN }}\\n          publish_dir: ./public\\n\")), mdx(\"p\", null, \"Commit this file and push it to the master branch. Now, goto the Settings page for the Github repository, and make sure Branch is set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gh-pages\"), \" and the selected folder is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"root\"), \", as shown in the following picture.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"github-pages-settings.png\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"Now, every time we push changes to our master branch on Github, a job will be triggered to run our build process deploy the new version of website. Just a couple of more items...\"), mdx(\"h2\", null, \"6. Tweak path settings\"), mdx(\"hr\", null), mdx(\"p\", null, \"Due to the nature of our Github Pages setup, we need to make the following change, which should be fairly self-explanatory:\"), mdx(\"h4\", null, mdx(\"em\", {\n    parentName: \"h4\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"gatsby-config.ts\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"\\n+ pathPrefix: 'dev-blog' // https://jonkers3.github.io/dev-blog <---\\n\\n  siteMetadata: ...\\n\")), mdx(\"p\", null, \"Given that at the moment all our site is, is a blog, having the extra \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blog\"), \" in our URL is redundant, especially when we're already in a folder called dev-blog! It turns out that the easiest way to fix this right now is just to move the blog index and template files out of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/pages/blog\"), \" folder and into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/pages\"), \". We can get rid of the empty blog folder.\"), mdx(\"h4\", null, mdx(\"em\", {\n    parentName: \"h4\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"src/pages/index.js\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"mv src/pages/blog/index.js src/pages/index.js\\nmv src/pages/blog/{mdx.slug}.js src/pages/{mdx.slug}.js\\n\")), mdx(\"p\", null, \"Fix the imports in these two files to reflect the change:\"), mdx(\"h4\", null, mdx(\"em\", {\n    parentName: \"h4\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"src/pages/{mdx.slug}.js\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"- import Code from '../../components/Code'\\n- import Layout from '../../components/Layout'\\n\\n+ import Code from '../components/Code'\\n+ import Layout from '../components/Layout'\\n\")), mdx(\"h4\", null, mdx(\"em\", {\n    parentName: \"h4\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"src/pages/index.js\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"- import Layout from '../../components/Layout'\\n+ import Layout from '../components/Layout'\\n\")), mdx(\"h2\", null, \"7. Create a gatsby-node.js config file\"), mdx(\"hr\", null), mdx(\"p\", null, \"This should be the last thing we need to do. This will take care of generating our static blog posts during the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby build\"), \" task. Create the following file:\"), mdx(\"h4\", null, mdx(\"em\", {\n    parentName: \"h4\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"gatsby-node.js\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const path = require(`path`)\\n\\nexports.createPages = ({ graphql, actions }) => {\\n  const { createPage } = actions\\n  return graphql(`\\n    {\\n      allMdx(sort: { order: DESC, fields: [frontmatter___date] }, limit: 1000) {\\n        nodes {\\n          frontmatter {\\n            date(formatString: \\\"DD MMMM YYYY\\\")\\n            title\\n          }\\n          slug\\n        }\\n      }\\n    }\\n  `).then((result) => {\\n    const posts = result.data.allMdx.nodes\\n\\n    posts.forEach((node, index) => {\\n      createPage({\\n        path: node.slug,\\n        component: path.resolve(`./src/pages/blog/{mdx.slug}.js`),\\n        context: {\\n          slug: node.slug,\\n          prev: index === 0 ? undefined : posts[index - 1],\\n          next: index === posts.length - 1 ? undefined : posts[index + 1],\\n        }\\n      })\\n    })\\n  })\\n}\\n\")), mdx(\"h2\", null, \"8. Commit changes and push to github\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"git commit -a -u -m 'initial deploy' && git push\\n\")), mdx(\"p\", null, \"And with that last command, we should be live on Github Pages with a working dev blog.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"5992a95a-0dee-5c09-a5e3-ab11862cce43","slug":"2022/07/22/setting-up-with-gatsby-part-ii/","__params":{"slug":"2022"}}},"staticQueryHashes":[]}