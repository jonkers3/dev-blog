{"version":3,"file":"component---src-pages-mdx-slug-js-2d2bf6fa3adeab5b04ff.js","mappings":"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","sources":["webpack://dev-blog/./node_modules/mdx-utils/index.js","webpack://dev-blog/./node_modules/parse-numeric-range/index.js","webpack://dev-blog/./node_modules/gatsby-plugin-mdx/index.js","webpack://dev-blog/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://dev-blog/./src/components/Nav/Nav.module.css","webpack://dev-blog/./src/components/Nav/index.tsx","webpack://dev-blog/./src/components/Layout/Layout.module.css","webpack://dev-blog/./src/components/Layout/index.tsx","webpack://dev-blog/./node_modules/prism-react-renderer/prism/index.js","webpack://dev-blog/./node_modules/prism-react-renderer/dist/index.js","webpack://dev-blog/./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://dev-blog/./node_modules/prism-react-renderer/themes/github/index.js","webpack://dev-blog/./node_modules/clsx/dist/clsx.m.js","webpack://dev-blog/./src/components/Code/index.jsx","webpack://dev-blog/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://dev-blog/./src/components/Code/Code.module.css","webpack://dev-blog/./src/pages/{mdx.slug}.js","webpack://dev-blog/./src/assets/icon.svg","webpack://dev-blog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/construct.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["var _defineProperty = require(\"/home/runner/work/dev-blog/dev-blog/node_modules/@babel/runtime/helpers/defineProperty.js\");\n\nvar _objectWithoutProperties = require(\"/home/runner/work/dev-blog/dev-blog/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\");\n\nvar _excluded = [\"children\", \"className\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nexports.preToCodeBlock = function (preProps) {\n  if ( // children is code element\n  preProps.children && // code props\n  preProps.children.props && // if children is actually a <code>\n  preProps.children.props.mdxType === \"code\") {\n    // we have a <pre><code> situation\n    var _preProps$children$pr = preProps.children.props,\n        codeString = _preProps$children$pr.children,\n        _preProps$children$pr2 = _preProps$children$pr.className,\n        className = _preProps$children$pr2 === void 0 ? \"\" : _preProps$children$pr2,\n        props = _objectWithoutProperties(_preProps$children$pr, _excluded);\n\n    var match = className.match(/language-([\\0-\\uFFFF]*)/);\n    return _objectSpread({\n      codeString: codeString.trim(),\n      className: className,\n      language: match != null ? match[1] : \"\"\n    }, props);\n  }\n\n  return undefined;\n};","var _slicedToArray = require(\"/home/runner/work/dev-blog/dev-blog/node_modules/@babel/runtime/helpers/slicedToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  var res = [];\n  var m;\n\n  var _iterator = _createForOfIteratorHelper(string.split(\",\").map(function (str) {\n    return str.trim();\n  })),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var str = _step.value;\n\n      // just a number\n      if (/^-?\\d+$/.test(str)) {\n        res.push(parseInt(str, 10));\n      } else if (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/)) {\n        // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n        var _m = m,\n            _m2 = _slicedToArray(_m, 4),\n            _ = _m2[0],\n            lhs = _m2[1],\n            sep = _m2[2],\n            rhs = _m2[3];\n\n        if (lhs && rhs) {\n          lhs = parseInt(lhs);\n          rhs = parseInt(rhs);\n          var incr = lhs < rhs ? 1 : -1; // Make it inclusive by moving the right 'stop-point' away by one.\n\n          if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n          for (var i = lhs; i !== rhs; i += incr) {\n            res.push(i);\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","// extracted by mini-css-extract-plugin\nexport var heading = \"Nav-module--heading--Y5sZN\";\nexport var navLinkItem = \"Nav-module--nav-link-item--8ZmL8\";\nexport var navLinkText = \"Nav-module--nav-link-text--gUBbf\";\nexport var navLinks = \"Nav-module--nav-links--Ajjqz\";","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport * as styles from './Nav.module.css'\n\nconst GithubLink = () => (\n  <svg\n    aria-hidden='true'\n    role='img'\n    viewBox='0 0 16 16'\n    width='32'\n    height='32'\n    fill='currentColor'\n  >\n    <path\n      fillRule='evenodd'\n      d='M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z'\n    ></path>\n  </svg>\n)\n\nexport default function Nav() {\n  return (\n    <header>\n      <nav>\n        <ul className={styles.navLinks}>\n          <li className={styles.navLinkItem}>\n            <Link to='/' className={styles.navLinkText}>\n              Home\n            </Link>\n          </li>\n          <li className={styles.navLinkItem}>\n            <a\n              href='https://github.com/jonkers3/dev-blog'\n              className={styles.navLinkItem}\n              target='_new'\n            >\n              <GithubLink />\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var innerContainer = \"Layout-module--inner-container--pkWsR\";\nexport var pageContainer = \"Layout-module--page-container--2OYCD\";","import React, { PropsWithChildren } from 'react'\r\nimport Nav from '@components/Nav'\r\nimport * as styles from './Layout.module.css'\r\n\r\nconst Layout = ({ children }: PropsWithChildren) => (\r\n  <div className={styles.pageContainer}>\r\n    <Nav />\r\n    <div className={styles.innerContainer}>{children}</div>\r\n  </div>\r\n)\r\n\r\nexport default Layout\r\n","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\nvar Prism = function () {\n  // Private helper vars\n  var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n  var uniqueId = 0; // The grammar object for plaintext\n\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone =\n            /** @type {Record<string, any>} */\n            {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n\n            /** @type {Array} */\n\n            /** @type {any} */\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element) {\n          var m = lang.exec(element.className);\n\n          if (m) {\n            return m[1].toLowerCase();\n          }\n\n          element = element.parentElement;\n        }\n\n        return 'none';\n      },\n\n      /**\n       * Sets the Prism `language-xxxx` class of the given element.\n       *\n       * @param {Element} element\n       * @param {string} language\n       * @returns {void}\n       */\n      setLanguage: function setLanguage(element, language) {\n        // remove all `language-xxxx` classes\n        // (this might leave behind a leading space)\n        element.className = element.className.replace(RegExp(lang, 'gi'), ''); // add the new `language-xxxx` class\n        // (using `classList` will automatically clean up spaces for us)\n\n        element.classList.add('language-' + language);\n      },\n\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function isActive(element, className, defaultActivation) {\n        var no = 'no-' + className;\n\n        while (element) {\n          var classList = element.classList;\n\n          if (classList.contains(className)) {\n            return true;\n          }\n\n          if (classList.contains(no)) {\n            return false;\n          }\n\n          element = element.parentElement;\n        }\n\n        return !!defaultActivation;\n      }\n    },\n\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root ||\n        /** @type {any} */\n        _.languages;\n        var grammar = root[inside];\n        /** @type {Grammar} */\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n\n            var propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  }; // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || '').length | 0;\n  }\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n\n\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n\n\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n\n    return match;\n  }\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n\n\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n        /** @type {RegExp} */\n\n\n        var pattern = patternObj.pattern || patternObj;\n\n        for ( // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          var match;\n\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n\n            if (!match || match.index >= text.length) {\n              break;\n            }\n\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos; // find the node that contains the match\n\n            p += currentNode.value.length;\n\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            } // adjust pos (and p)\n\n\n            p -= currentNode.value.length;\n            pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n            if (currentNode.value instanceof Token) {\n              continue;\n            } // find the last node which is affected by this match\n\n\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n\n            removeCount--; // replace with the new match\n\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n\n            if (!match) {\n              continue;\n            }\n          } // eslint-disable-next-line no-redeclare\n\n\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch); // the reach might have been extended because of the rematching\n\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n\n\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */\n\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n\n    this.tail = tail;\n    this.length = 0;\n  }\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n\n\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n\n\n  function removeRange(list, node, count) {\n    var next = node.next;\n\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n\n\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n\n    return array;\n  }\n\n  return _;\n}();\n\nvar prism = Prism;\nPrism.default = Prism;\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function value(attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' + // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' + // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + ( // constant\n    /NaN|Infinity/.source + '|' + // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' + // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' + // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' + // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\n\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-coffeescript\" */\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-yaml\" */\n\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n/* \"prismjs/components/prism-markdown\" */\n\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n\n      if (code[0] === '#') {\n        var value;\n\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n\n        if (known) {\n          return known;\n        } // unable to decode\n\n\n        return m;\n      }\n    });\n    return text;\n  }\n\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n\n    aliases.push(alias);\n  }\n\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n\n        currentIndex = definitionEnd + 1;\n      }\n\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // sql`...`\n  createTemplate('sql', /\\bsql/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-jsx\" */\n\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [// binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n              walkTokens(token.content);\n            }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [// binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\nexport default prism;","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"atrule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","// Original: https://raw.githubusercontent.com/PrismJS/prism-themes/master/themes/prism-ghcolors.css\nvar theme = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n    style: {\n      color: \"#999988\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"string\", \"attr-value\"],\n    style: {\n      color: \"#e3116c\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#393A34\"\n    }\n  }, {\n    types: [\"entity\", \"url\", \"symbol\", \"number\", \"boolean\", \"variable\", \"constant\", \"property\", \"regex\", \"inserted\"],\n    style: {\n      color: \"#36acaa\"\n    }\n  }, {\n    types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n    style: {\n      color: \"#00a4db\"\n    }\n  }, {\n    types: [\"function\", \"deleted\", \"tag\"],\n    style: {\n      color: \"#d73a49\"\n    }\n  }, {\n    types: [\"function-variable\"],\n    style: {\n      color: \"#6f42c1\"\n    }\n  }, {\n    types: [\"tag\", \"selector\", \"keyword\"],\n    style: {\n      color: \"#00009f\"\n    }\n  }]\n};\nexport default theme;","function r(e) {\n  var t,\n      f,\n      n = \"\";\n  if (\"string\" == typeof e || \"number\" == typeof e) n += e;else if (\"object\" == typeof e) if (Array.isArray(e)) for (t = 0; t < e.length; t++) {\n    e[t] && (f = r(e[t])) && (n && (n += \" \"), n += f);\n  } else for (t in e) {\n    e[t] && (n && (n += \" \"), n += t);\n  }\n  return n;\n}\n\nexport function clsx() {\n  for (var e, t, f = 0, n = \"\"; f < arguments.length;) {\n    (e = arguments[f++]) && (t = r(e)) && (n && (n += \" \"), n += t);\n  }\n\n  return n;\n}\nexport default clsx;","import React from 'react'\r\nimport Highlight, { defaultProps } from 'prism-react-renderer'\r\nimport theme from 'prism-react-renderer/themes/github'\r\nimport rangeParser from 'parse-numeric-range'\r\nimport { clsx } from 'clsx'\r\nimport * as styles from './Code.module.css'\r\nimport Clipboard from '@assets/icon.svg'\r\nimport 'prismjs/plugins/command-line/prism-command-line.css'\r\n\r\nconst CopyButton = (props) => {\r\n  const { isCopied, ...rest } = props\r\n\r\n  return (\r\n    <button className={styles.button} {...rest}>\r\n      {' '}\r\n      <Clipboard title='Copy' />\r\n      {!isCopied ? (\r\n        <span>\r\n          <br />\r\n          Copy\r\n        </span>\r\n      ) : (\r\n        <i>\r\n          <br />\r\n          Copied!\r\n        </i>\r\n      )}\r\n    </button>\r\n  )\r\n}\r\n\r\nconst calculateLinesToHighlight = (raw) => {\r\n  if (raw) {\r\n    const lineNumbers = rangeParser(raw)\r\n    return lineNumbers\r\n  }\r\n  return []\r\n}\r\n\r\nconst Code = ({\r\n  exclude,\r\n  copy,\r\n  file,\r\n  codeString,\r\n  language,\r\n  highlight,\r\n  add,\r\n  remove,\r\n  output,\r\n  start = 0\r\n}) => {\r\n  const isTerminal = !!output || language === 'sh'\r\n\r\n  const [isCopied, setIsCopied] = React.useState(false)\r\n\r\n  const showLineNums = parseInt(start) > 0\r\n\r\n  const highlighted = calculateLinesToHighlight(highlight)\r\n  const adding = calculateLinesToHighlight(add)\r\n  const removing = calculateLinesToHighlight(remove)\r\n  const excluding = calculateLinesToHighlight(exclude)\r\n\r\n  const copyExclude = removing + excluding\r\n\r\n  const copyString = copyExclude.length\r\n    ? codeString\r\n        .split('\\n')\r\n        .filter((x, i) => copyExclude.indexOf(i + 1) === -1)\r\n        .join('\\n')\r\n    : codeString\r\n\r\n  const getLineNumber = (i) =>\r\n    showLineNums\r\n      ? `${((parseInt(start) + i).toString() + '    ').slice(0, 4)}`\r\n      : ''\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      <div style={{ display: 'flex', position: 'relative' }}>\r\n        {file && <div className={styles.filename}>{file}</div>}\r\n        <div style={{ display: 'flex', flexGrow: 1 }}></div>\r\n        {language && language !== 'none' && (\r\n          <div className={styles.language}>{language}</div>\r\n        )}\r\n      </div>\r\n      <div className={styles.codeContainer}>\r\n        <Highlight\r\n          {...defaultProps}\r\n          code={codeString}\r\n          language={language}\r\n          theme={theme}\r\n        >\r\n          {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n            <pre\r\n              className={className}\r\n              style={{\r\n                ...style,\r\n                position: 'relative',\r\n                padding: '20px',\r\n                margin: 0,\r\n                background: '#000'\r\n              }}\r\n            >\r\n              {parseInt(copy) !== 0 && (\r\n                <CopyButton\r\n                  onClick={() => {\r\n                    navigator.clipboard.writeText(copyString)\r\n                    setIsCopied(true)\r\n                    setTimeout(() => setIsCopied(false), 1111)\r\n                  }}\r\n                  isCopied={isCopied}\r\n                />\r\n              )}\r\n              {tokens.map((line, i) => (\r\n                <div\r\n                  key={i}\r\n                  {...getLineProps({ line, key: i })}\r\n                  className={clsx({\r\n                    [styles.line]: true,\r\n                    [styles.noIndent]:\r\n                      !showLineNums && adding.length < 1 && removing.length < 1,\r\n                    [styles.addLine]: adding.includes(i + 1),\r\n                    [styles.removeLine]: removing.includes(i + 1),\r\n                    [styles.highlightLine]:\r\n                      adding.includes(i + 1) ||\r\n                      removing.includes(i + 1) ||\r\n                      highlighted.includes(i + 1)\r\n                  })}\r\n                  data-line-number={getLineNumber(i)}\r\n                >\r\n                  {line.map((token, key) => (\r\n                    <span key={key} {...getTokenProps({ token, key })} />\r\n                  ))}\r\n                </div>\r\n              ))}\r\n              {isTerminal && output && (\r\n                <div>\r\n                  <hr />\r\n                  {output}\r\n                </div>\r\n              )}\r\n            </pre>\r\n          )}\r\n        </Highlight>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Code\r\n\r\nexport const Pre = ({ txt }) => <pre>{txt}</pre>\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport var addLine = \"Code-module--add-line--8zXe6\";\nexport var button = \"Code-module--button--hb3UW\";\nexport var codeContainer = \"Code-module--code-container--DmPR3\";\nexport var component = \"Code-module--component--x-DCD\";\nexport var filename = \"Code-module--filename--R9ejA\";\nexport var highlightLine = \"Code-module--highlight-line--420OH\";\nexport var language = \"Code-module--language--R4A4q\";\nexport var line = \"Code-module--line--480g0\";\nexport var noIndent = \"Code-module--no-indent--WL3WD\";\nexport var removeLine = \"Code-module--remove-line--+fGlu\";","import * as React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\r\nimport { MDXProvider } from '@mdx-js/react'\r\nimport { preToCodeBlock } from 'mdx-utils'\r\nimport Code from '@components/Code'\r\nimport Layout from '@components/Layout'\r\n\r\nconst components = {\r\n  pre: (preProps) => {\r\n    const props = preToCodeBlock(preProps)\r\n    return props ? <Code {...props} /> : <pre {...preProps} />\r\n  }\r\n}\r\n\r\nconst BlogPost = ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <MDXProvider components={components}>\r\n        <p>{data.mdx.frontmatter.date}</p>\r\n        <MDXRenderer>{data.mdx.body}</MDXRenderer>\r\n      </MDXProvider>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query ($id: String) {\r\n    mdx(id: { eq: $id }) {\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM D, YYYY\")\r\n      }\r\n      body\r\n    }\r\n  }\r\n`\r\n\r\nexport default BlogPost\r\n","var React = require('react');\n\nfunction Icon (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"g\",{\"key\":0},[React.createElement(\"path\",{\"style\":{\"fill\":\"#A88D63\"},\"d\":\"M328.935,354.585c0,12.138-9.932,22.069-22.07,22.069H74.569c-12.138,0-22.069-9.932-22.069-22.069\\r\\n\\t\\tV68.047c0-12.138,9.932-22.069,22.069-22.069h232.295c12.139,0,22.07,9.932,22.07,22.069v286.538H328.935z\",\"key\":0}),React.createElement(\"path\",{\"style\":{\"fill\":\"#3E4A57\"},\"d\":\"M242.18,30.623h-32.862c1.504-2.892,2.367-6.171,2.367-9.657C211.686,9.388,202.296,0,190.716,0\\r\\n\\t\\tc-11.581,0-20.966,9.388-20.966,20.966c0,3.486,0.863,6.766,2.368,9.657h-32.862c-9.105,0-16.553,7.447-16.553,16.552v24.552\\r\\n\\t\\tH258.73V47.175C258.73,38.07,251.281,30.623,242.18,30.623z M190.716,28.611c-4.222,0-7.645-3.423-7.645-7.646\\r\\n\\t\\tc0-4.22,3.423-7.643,7.645-7.643c4.224,0,7.645,3.423,7.645,7.643C198.36,25.188,194.939,28.611,190.716,28.611z\",\"key\":1}),React.createElement(\"path\",{\"style\":{\"fill\":\"#CAA977\"},\"d\":\"M324.153,354.585c0,12.138-9.932,22.069-22.07,22.069H69.788c-12.139,0-22.07-9.932-22.07-22.069\\r\\n\\t\\tV68.047c0-12.138,9.932-22.069,22.07-22.069h232.295c12.139,0,22.07,9.932,22.07,22.069V354.585z\",\"key\":2}),React.createElement(\"rect\",{\"x\":\"70.803\",\"y\":\"65.232\",\"style\":{\"fill\":\"#E8E8E8\"},\"width\":\"230.264\",\"height\":\"279.886\",\"key\":3}),React.createElement(\"g\",{\"key\":4},[React.createElement(\"path\",{\"style\":{\"fill\":\"#5C6670\"},\"d\":\"M237.396,30.623h-32.861c1.504-2.892,2.367-6.171,2.367-9.657C206.902,9.388,197.516,0,185.938,0\\r\\n\\t\\t\\tc-11.581,0-20.969,9.388-20.969,20.966c0,3.486,0.863,6.766,2.367,9.657h-32.862c-9.102,0-16.553,7.447-16.553,16.552v24.552\\r\\n\\t\\t\\th136.029V47.175C253.949,38.07,246.501,30.623,237.396,30.623z M185.938,28.611c-4.226,0-7.646-3.423-7.646-7.646\\r\\n\\t\\t\\tc0-4.22,3.421-7.643,7.646-7.643c4.222,0,7.646,3.423,7.646,7.643C193.582,25.188,190.158,28.611,185.938,28.611z\",\"key\":0}),React.createElement(\"path\",{\"style\":{\"fill\":\"#A4A9AD\"},\"d\":\"M185.938,4.966c-8.839,0-16.003,7.165-16.003,16c0,8.839,7.164,16.003,16.003,16.003\\r\\n\\t\\t\\tc8.838,0,16-7.164,16-16.003C201.938,12.131,194.774,4.966,185.938,4.966z M185.938,28.611c-4.226,0-7.646-3.423-7.646-7.646\\r\\n\\t\\t\\tc0-4.22,3.421-7.643,7.646-7.643c4.222,0,7.646,3.423,7.646,7.643C193.582,25.188,190.158,28.611,185.938,28.611z\",\"key\":1}),React.createElement(\"line\",{\"style\":{\"fill\":\"none\",\"stroke\":\"#A4A9AD\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"strokeMiterlimit\":\"10\"},\"x1\":\"127.082\",\"y1\":\"57.381\",\"x2\":\"244.786\",\"y2\":\"57.381\",\"key\":2}),React.createElement(\"line\",{\"style\":{\"fill\":\"none\",\"stroke\":\"#A4A9AD\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"strokeMiterlimit\":\"10\"},\"x1\":\"150.505\",\"y1\":\"48.185\",\"x2\":\"221.368\",\"y2\":\"48.185\",\"key\":3})]),React.createElement(\"g\",{\"key\":5},[React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"102.159\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"183.178\",\"height\":\"11.132\",\"key\":0}),React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"128.644\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"156.695\",\"height\":\"11.13\",\"key\":1}),React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"155.128\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"183.178\",\"height\":\"11.13\",\"key\":2}),React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"181.611\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"156.695\",\"height\":\"11.13\",\"key\":3}),React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"208.094\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"183.178\",\"height\":\"11.131\",\"key\":4}),React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"234.578\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"156.695\",\"height\":\"11.13\",\"key\":5}),React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"261.061\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"183.178\",\"height\":\"11.131\",\"key\":6})])]),React.createElement(\"g\",{\"key\":1}),React.createElement(\"g\",{\"key\":2}),React.createElement(\"g\",{\"key\":3}),React.createElement(\"g\",{\"key\":4}),React.createElement(\"g\",{\"key\":5}),React.createElement(\"g\",{\"key\":6}),React.createElement(\"g\",{\"key\":7}),React.createElement(\"g\",{\"key\":8}),React.createElement(\"g\",{\"key\":9}),React.createElement(\"g\",{\"key\":10}),React.createElement(\"g\",{\"key\":11}),React.createElement(\"g\",{\"key\":12}),React.createElement(\"g\",{\"key\":13}),React.createElement(\"g\",{\"key\":14}),React.createElement(\"g\",{\"key\":15})]);\n}\n\nIcon.defaultProps = {\"version\":\"1.1\",\"id\":\"Layer_1\",\"x\":\"0px\",\"y\":\"0px\",\"viewBox\":\"0 0 376.654 376.654\",\"style\":{\"enableBackground\":\"new 0 0 376.654 376.654\"},\"xmlSpace\":\"preserve\"};\n\nmodule.exports = Icon;\n\nIcon.default = Icon;\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_defineProperty","_objectWithoutProperties","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","exports","preProps","children","props","mdxType","_preProps$children$pr","codeString","_preProps$children$pr2","className","match","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","trim","language","_slicedToArray","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","_unsupportedIterableToArray","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","parsePart","string","m","_step","res","_iterator","split","map","str","parseInt","_m2","lhs","sep","rhs","incr","module","MDXRenderer","require","React","mdx","useMDXScope","scope","mdxScope","End","useMemo","fullScope","values","Function","fn","createElement","navLinkItem","GithubLink","role","viewBox","width","height","fill","fillRule","d","Nav","styles","Link","to","href","Prism","lang","uniqueId","plainTextGrammar","_","util","encode","tokens","Token","type","content","alias","replace","objId","obj","clone","deepClone","visited","id","hasOwnProperty","v","getLanguage","element","exec","toLowerCase","parentElement","setLanguage","RegExp","classList","add","isActive","defaultActivation","no","contains","languages","plain","plaintext","text","txt","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlight","env","code","hooks","run","tokenize","stringify","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","tail","toArray","all","callbacks","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","currentNode","reach","removeCount","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","tag","classes","attributes","aliases","join","prism","default","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","entity","variable","toBeCopied","shell","clike","c","keyword","modName","cpp","css","addInlined","addAttribute","selectorInside","selector","unit","number","javascript","regex","js","comment","interpolation","coffeescript","coffee","anchorOrAlias","properties","plainKey","createValuePattern","yaml","yml","inner","createInline","tableCell","tableRow","tableLine","markdown","punctuation","walkTokens","l","codeLang","codeBlock","cls","tagPattern","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","String","fromCharCode","md","graphql","validTokens","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","indexOf","offset","types","open","close","stackHeight","sql","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenizeInterpolationExpression","expression","tempGrammar","args","splice","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","substring","middle","replacement","afterTokens","concat","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","typescript","typeInside","ts","withId","unshift","maybeClassNameTokens","space","braces","spread","re","jsx","stringifyToken","openedTags","notTagNorBrace","pop","openedBraces","plainText","diff","PREFIXES","prefix","git","go","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","tokenizePlaceholders","handlebars","hbs","json","webmanifest","less","makefile","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","scss","stylus","func","tsx","wasm","defaultProps","theme","backgroundColor","color","style","opacity","textDecorationLine","fontStyle","fontWeight","configurable","writable","_extends","assign","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","create","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Highlight","Component","this$1","undefined","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","getStyleForToken","__proto__","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","r","clsx","CopyButton","isCopied","excluded","sourceKeys","title","calculateLinesToHighlight","raw","rangeParser","copy","file","remove","start","isTerminal","setIsCopied","showLineNums","highlighted","adding","removing","excluding","copyExclude","copyString","x","getLineNumber","position","flexGrow","padding","margin","background","onClick","navigator","clipboard","writeText","setTimeout","components","pre","preToCodeBlock","data","Layout","MDXProvider","frontmatter","date","body","Icon","arrayLikeToArray","__esModule","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","Class","Reflect","construct","bind","a","instance","sham","Proxy","iter","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread"],"sourceRoot":""}