{"version":3,"file":"component---src-pages-mdx-slug-js-446dea67dc8fe642e284.js","mappings":"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","sources":["webpack://dev-blog/./node_modules/lodash.kebabcase/index.js","webpack://dev-blog/./node_modules/parse-numeric-range/index.js","webpack://dev-blog/./node_modules/gatsby-plugin-mdx/index.js","webpack://dev-blog/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://dev-blog/./node_modules/prism-react-renderer/prism/index.js","webpack://dev-blog/./node_modules/prism-react-renderer/dist/index.js","webpack://dev-blog/./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://dev-blog/./node_modules/prism-react-renderer/themes/github/index.js","webpack://dev-blog/./node_modules/clsx/dist/clsx.m.js","webpack://dev-blog/./src/components/Utils/index.tsx","webpack://dev-blog/./src/components/Code/index.jsx","webpack://dev-blog/./src/components/Code/Code.module.css","webpack://dev-blog/./src/pages/{mdx.slug}.js","webpack://dev-blog/./src/assets/icon.svg","webpack://dev-blog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/construct.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n/** `Object#toString` result references. */\n\nvar symbolTag = '[object Symbol]';\n/** Used to match words composed of alphanumeric characters. */\n\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\n\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n/** Used to compose unicode character classes. */\n\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\",\n    rsComboMarksRange = \"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20f0\",\n    rsDingbatRange = \"\\\\u2700-\\\\u27bf\",\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = \"\\\\u2000-\\\\u206f\",\n    rsSpaceRange = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = \"\\\\ufe0e\\\\ufe0f\",\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n/** Used to compose unicode capture groups. */\n\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\",\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",\n    rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = \"\\\\u200d\";\n/** Used to compose unicode regexes. */\n\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n/** Used to match apostrophes. */\n\nvar reApos = RegExp(rsApos, 'g');\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\n\nvar reComboMark = RegExp(rsCombo, 'g');\n/** Used to match complex or compound words. */\n\nvar reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')', rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr, rsUpper + '+' + rsOptUpperContr, rsDigits, rsEmoji].join('|'), 'g');\n/** Used to detect strings that need a more robust regexp to match words. */\n\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n/** Used to map Latin Unicode letters to basic Latin letters. */\n\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',\n  '\\xc1': 'A',\n  '\\xc2': 'A',\n  '\\xc3': 'A',\n  '\\xc4': 'A',\n  '\\xc5': 'A',\n  '\\xe0': 'a',\n  '\\xe1': 'a',\n  '\\xe2': 'a',\n  '\\xe3': 'a',\n  '\\xe4': 'a',\n  '\\xe5': 'a',\n  '\\xc7': 'C',\n  '\\xe7': 'c',\n  '\\xd0': 'D',\n  '\\xf0': 'd',\n  '\\xc8': 'E',\n  '\\xc9': 'E',\n  '\\xca': 'E',\n  '\\xcb': 'E',\n  '\\xe8': 'e',\n  '\\xe9': 'e',\n  '\\xea': 'e',\n  '\\xeb': 'e',\n  '\\xcc': 'I',\n  '\\xcd': 'I',\n  '\\xce': 'I',\n  '\\xcf': 'I',\n  '\\xec': 'i',\n  '\\xed': 'i',\n  '\\xee': 'i',\n  '\\xef': 'i',\n  '\\xd1': 'N',\n  '\\xf1': 'n',\n  '\\xd2': 'O',\n  '\\xd3': 'O',\n  '\\xd4': 'O',\n  '\\xd5': 'O',\n  '\\xd6': 'O',\n  '\\xd8': 'O',\n  '\\xf2': 'o',\n  '\\xf3': 'o',\n  '\\xf4': 'o',\n  '\\xf5': 'o',\n  '\\xf6': 'o',\n  '\\xf8': 'o',\n  '\\xd9': 'U',\n  '\\xda': 'U',\n  '\\xdb': 'U',\n  '\\xdc': 'U',\n  '\\xf9': 'u',\n  '\\xfa': 'u',\n  '\\xfb': 'u',\n  '\\xfc': 'u',\n  '\\xdd': 'Y',\n  '\\xfd': 'y',\n  '\\xff': 'y',\n  '\\xc6': 'Ae',\n  '\\xe6': 'ae',\n  '\\xde': 'Th',\n  '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  \"\\u0100\": 'A',\n  \"\\u0102\": 'A',\n  \"\\u0104\": 'A',\n  \"\\u0101\": 'a',\n  \"\\u0103\": 'a',\n  \"\\u0105\": 'a',\n  \"\\u0106\": 'C',\n  \"\\u0108\": 'C',\n  \"\\u010A\": 'C',\n  \"\\u010C\": 'C',\n  \"\\u0107\": 'c',\n  \"\\u0109\": 'c',\n  \"\\u010B\": 'c',\n  \"\\u010D\": 'c',\n  \"\\u010E\": 'D',\n  \"\\u0110\": 'D',\n  \"\\u010F\": 'd',\n  \"\\u0111\": 'd',\n  \"\\u0112\": 'E',\n  \"\\u0114\": 'E',\n  \"\\u0116\": 'E',\n  \"\\u0118\": 'E',\n  \"\\u011A\": 'E',\n  \"\\u0113\": 'e',\n  \"\\u0115\": 'e',\n  \"\\u0117\": 'e',\n  \"\\u0119\": 'e',\n  \"\\u011B\": 'e',\n  \"\\u011C\": 'G',\n  \"\\u011E\": 'G',\n  \"\\u0120\": 'G',\n  \"\\u0122\": 'G',\n  \"\\u011D\": 'g',\n  \"\\u011F\": 'g',\n  \"\\u0121\": 'g',\n  \"\\u0123\": 'g',\n  \"\\u0124\": 'H',\n  \"\\u0126\": 'H',\n  \"\\u0125\": 'h',\n  \"\\u0127\": 'h',\n  \"\\u0128\": 'I',\n  \"\\u012A\": 'I',\n  \"\\u012C\": 'I',\n  \"\\u012E\": 'I',\n  \"\\u0130\": 'I',\n  \"\\u0129\": 'i',\n  \"\\u012B\": 'i',\n  \"\\u012D\": 'i',\n  \"\\u012F\": 'i',\n  \"\\u0131\": 'i',\n  \"\\u0134\": 'J',\n  \"\\u0135\": 'j',\n  \"\\u0136\": 'K',\n  \"\\u0137\": 'k',\n  \"\\u0138\": 'k',\n  \"\\u0139\": 'L',\n  \"\\u013B\": 'L',\n  \"\\u013D\": 'L',\n  \"\\u013F\": 'L',\n  \"\\u0141\": 'L',\n  \"\\u013A\": 'l',\n  \"\\u013C\": 'l',\n  \"\\u013E\": 'l',\n  \"\\u0140\": 'l',\n  \"\\u0142\": 'l',\n  \"\\u0143\": 'N',\n  \"\\u0145\": 'N',\n  \"\\u0147\": 'N',\n  \"\\u014A\": 'N',\n  \"\\u0144\": 'n',\n  \"\\u0146\": 'n',\n  \"\\u0148\": 'n',\n  \"\\u014B\": 'n',\n  \"\\u014C\": 'O',\n  \"\\u014E\": 'O',\n  \"\\u0150\": 'O',\n  \"\\u014D\": 'o',\n  \"\\u014F\": 'o',\n  \"\\u0151\": 'o',\n  \"\\u0154\": 'R',\n  \"\\u0156\": 'R',\n  \"\\u0158\": 'R',\n  \"\\u0155\": 'r',\n  \"\\u0157\": 'r',\n  \"\\u0159\": 'r',\n  \"\\u015A\": 'S',\n  \"\\u015C\": 'S',\n  \"\\u015E\": 'S',\n  \"\\u0160\": 'S',\n  \"\\u015B\": 's',\n  \"\\u015D\": 's',\n  \"\\u015F\": 's',\n  \"\\u0161\": 's',\n  \"\\u0162\": 'T',\n  \"\\u0164\": 'T',\n  \"\\u0166\": 'T',\n  \"\\u0163\": 't',\n  \"\\u0165\": 't',\n  \"\\u0167\": 't',\n  \"\\u0168\": 'U',\n  \"\\u016A\": 'U',\n  \"\\u016C\": 'U',\n  \"\\u016E\": 'U',\n  \"\\u0170\": 'U',\n  \"\\u0172\": 'U',\n  \"\\u0169\": 'u',\n  \"\\u016B\": 'u',\n  \"\\u016D\": 'u',\n  \"\\u016F\": 'u',\n  \"\\u0171\": 'u',\n  \"\\u0173\": 'u',\n  \"\\u0174\": 'W',\n  \"\\u0175\": 'w',\n  \"\\u0176\": 'Y',\n  \"\\u0177\": 'y',\n  \"\\u0178\": 'Y',\n  \"\\u0179\": 'Z',\n  \"\\u017B\": 'Z',\n  \"\\u017D\": 'Z',\n  \"\\u017A\": 'z',\n  \"\\u017C\": 'z',\n  \"\\u017E\": 'z',\n  \"\\u0132\": 'IJ',\n  \"\\u0133\": 'ij',\n  \"\\u0152\": 'Oe',\n  \"\\u0153\": 'oe',\n  \"\\u0149\": \"'n\",\n  \"\\u017F\": 'ss'\n};\n/** Detect free variable `global` from Node.js. */\n\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\n\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n\n  return accumulator;\n}\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\n\n\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyOf(object) {\n  return function (key) {\n    return object == null ? undefined : object[key];\n  };\n}\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\n\n\nvar deburrLetter = basePropertyOf(deburredLetters);\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\n\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\n\n\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar Symbol = root.Symbol;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\n\n\nfunction createCompounder(callback) {\n  return function (string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\n\n\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\n\n\nvar kebabCase = createCompounder(function (result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\n\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n\n  return string.match(pattern) || [];\n}\n\nmodule.exports = kebabCase;","var _slicedToArray = require(\"/home/runner/work/dev-blog/dev-blog/node_modules/@babel/runtime/helpers/slicedToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  var res = [];\n  var m;\n\n  var _iterator = _createForOfIteratorHelper(string.split(\",\").map(function (str) {\n    return str.trim();\n  })),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var str = _step.value;\n\n      // just a number\n      if (/^-?\\d+$/.test(str)) {\n        res.push(parseInt(str, 10));\n      } else if (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/)) {\n        // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n        var _m = m,\n            _m2 = _slicedToArray(_m, 4),\n            _ = _m2[0],\n            lhs = _m2[1],\n            sep = _m2[2],\n            rhs = _m2[3];\n\n        if (lhs && rhs) {\n          lhs = parseInt(lhs);\n          rhs = parseInt(rhs);\n          var incr = lhs < rhs ? 1 : -1; // Make it inclusive by moving the right 'stop-point' away by one.\n\n          if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n          for (var i = lhs; i !== rhs; i += incr) {\n            res.push(i);\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\nvar Prism = function () {\n  // Private helper vars\n  var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n  var uniqueId = 0; // The grammar object for plaintext\n\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone =\n            /** @type {Record<string, any>} */\n            {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n\n            /** @type {Array} */\n\n            /** @type {any} */\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element) {\n          var m = lang.exec(element.className);\n\n          if (m) {\n            return m[1].toLowerCase();\n          }\n\n          element = element.parentElement;\n        }\n\n        return 'none';\n      },\n\n      /**\n       * Sets the Prism `language-xxxx` class of the given element.\n       *\n       * @param {Element} element\n       * @param {string} language\n       * @returns {void}\n       */\n      setLanguage: function setLanguage(element, language) {\n        // remove all `language-xxxx` classes\n        // (this might leave behind a leading space)\n        element.className = element.className.replace(RegExp(lang, 'gi'), ''); // add the new `language-xxxx` class\n        // (using `classList` will automatically clean up spaces for us)\n\n        element.classList.add('language-' + language);\n      },\n\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function isActive(element, className, defaultActivation) {\n        var no = 'no-' + className;\n\n        while (element) {\n          var classList = element.classList;\n\n          if (classList.contains(className)) {\n            return true;\n          }\n\n          if (classList.contains(no)) {\n            return false;\n          }\n\n          element = element.parentElement;\n        }\n\n        return !!defaultActivation;\n      }\n    },\n\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root ||\n        /** @type {any} */\n        _.languages;\n        var grammar = root[inside];\n        /** @type {Grammar} */\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n\n            var propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  }; // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || '').length | 0;\n  }\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n\n\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n\n\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n\n    return match;\n  }\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n\n\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n        /** @type {RegExp} */\n\n\n        var pattern = patternObj.pattern || patternObj;\n\n        for ( // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          var match;\n\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n\n            if (!match || match.index >= text.length) {\n              break;\n            }\n\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos; // find the node that contains the match\n\n            p += currentNode.value.length;\n\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            } // adjust pos (and p)\n\n\n            p -= currentNode.value.length;\n            pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n            if (currentNode.value instanceof Token) {\n              continue;\n            } // find the last node which is affected by this match\n\n\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n\n            removeCount--; // replace with the new match\n\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n\n            if (!match) {\n              continue;\n            }\n          } // eslint-disable-next-line no-redeclare\n\n\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch); // the reach might have been extended because of the rematching\n\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n\n\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */\n\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n\n    this.tail = tail;\n    this.length = 0;\n  }\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n\n\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n\n\n  function removeRange(list, node, count) {\n    var next = node.next;\n\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n\n\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n\n    return array;\n  }\n\n  return _;\n}();\n\nvar prism = Prism;\nPrism.default = Prism;\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function value(attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' + // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' + // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + ( // constant\n    /NaN|Infinity/.source + '|' + // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' + // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' + // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' + // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\n\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-coffeescript\" */\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-yaml\" */\n\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n/* \"prismjs/components/prism-markdown\" */\n\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n\n      if (code[0] === '#') {\n        var value;\n\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n\n        if (known) {\n          return known;\n        } // unable to decode\n\n\n        return m;\n      }\n    });\n    return text;\n  }\n\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n\n    aliases.push(alias);\n  }\n\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n\n        currentIndex = definitionEnd + 1;\n      }\n\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // sql`...`\n  createTemplate('sql', /\\bsql/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-jsx\" */\n\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [// binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n              walkTokens(token.content);\n            }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [// binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\nexport default prism;","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"atrule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","// Original: https://raw.githubusercontent.com/PrismJS/prism-themes/master/themes/prism-ghcolors.css\nvar theme = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n    style: {\n      color: \"#999988\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"string\", \"attr-value\"],\n    style: {\n      color: \"#e3116c\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#393A34\"\n    }\n  }, {\n    types: [\"entity\", \"url\", \"symbol\", \"number\", \"boolean\", \"variable\", \"constant\", \"property\", \"regex\", \"inserted\"],\n    style: {\n      color: \"#36acaa\"\n    }\n  }, {\n    types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n    style: {\n      color: \"#00a4db\"\n    }\n  }, {\n    types: [\"function\", \"deleted\", \"tag\"],\n    style: {\n      color: \"#d73a49\"\n    }\n  }, {\n    types: [\"function-variable\"],\n    style: {\n      color: \"#6f42c1\"\n    }\n  }, {\n    types: [\"tag\", \"selector\", \"keyword\"],\n    style: {\n      color: \"#00009f\"\n    }\n  }]\n};\nexport default theme;","function r(e) {\n  var t,\n      f,\n      n = \"\";\n  if (\"string\" == typeof e || \"number\" == typeof e) n += e;else if (\"object\" == typeof e) if (Array.isArray(e)) for (t = 0; t < e.length; t++) {\n    e[t] && (f = r(e[t])) && (n && (n += \" \"), n += f);\n  } else for (t in e) {\n    e[t] && (n && (n += \" \"), n += t);\n  }\n  return n;\n}\n\nexport function clsx() {\n  for (var e, t, f = 0, n = \"\"; f < arguments.length;) {\n    (e = arguments[f++]) && (t = r(e)) && (n && (n += \" \"), n += t);\n  }\n\n  return n;\n}\nexport default clsx;","import * as React from 'react'\n\nexport function If({\n  children,\n  condition\n}: {\n  children: React.ReactNode\n  condition: boolean\n}) {\n  return condition ? <>{children}</> : null\n}\n","import React from 'react'\r\nimport Highlight, { defaultProps } from 'prism-react-renderer'\r\nimport theme from 'prism-react-renderer/themes/github'\r\nimport rangeParser from 'parse-numeric-range'\r\nimport { clsx } from 'clsx'\r\nimport { If } from '@components/Utils'\r\nimport Clipboard from '@assets/icon.svg'\r\nimport * as styles from './Code.module.css'\r\n\r\nconst CopyButton = (props) => {\r\n  const { isCopied, ...rest } = props\r\n\r\n  return (\r\n    <button className={styles.button} {...rest}>\r\n      <Clipboard title='Copy' />\r\n      <If condition={isCopied}>\r\n        <i>\r\n          <br />\r\n          Copied!\r\n        </i>\r\n      </If>\r\n    </button>\r\n  )\r\n}\r\n\r\nconst extractMetadata = (raw) => rangeParser(String(raw)) ?? []\r\n\r\nconst Code = ({\r\n  exclude,\r\n  copy,\r\n  file,\r\n  codeString,\r\n  language,\r\n  highlight,\r\n  add,\r\n  remove,\r\n  output,\r\n  command,\r\n  start = 0\r\n}) => {\r\n  const isTerminal = !!output || language === 'sh'\r\n\r\n  const [isCopied, setIsCopied] = React.useState(false)\r\n\r\n  const highlighted = extractMetadata(highlight)\r\n  const adding = extractMetadata(add)\r\n  const removing = extractMetadata(remove)\r\n  const excluding = extractMetadata(exclude)\r\n  const commands = extractMetadata(command)\r\n\r\n  const allHighlighted = adding + removing + highlighted\r\n\r\n  const showLineNums = parseInt(start) > 0\r\n  const hideGutter = !showLineNums && adding.length < 1 && removing.length < 1\r\n\r\n  const copyExclude = removing + excluding\r\n  const copyString = getCopyString(copyExclude, codeString)\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      <div style={{ display: 'flex', position: 'relative' }}>\r\n        <If condition={file}>\r\n          <div className={styles.filename}>{file}</div>\r\n        </If>\r\n        <div style={{ display: 'flex', flexGrow: 1 }}></div>\r\n        <If condition={language !== 'none'}>\r\n          <div className={styles.language}>{language}</div>\r\n        </If>\r\n      </div>\r\n      <div className={styles.codeContainer}>\r\n        <Highlight\r\n          {...defaultProps}\r\n          code={codeString}\r\n          language={language}\r\n          theme={theme}\r\n        >\r\n          {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n            <pre>\r\n              {parseInt(copy) !== 0 && (\r\n                <CopyButton\r\n                  onClick={() => {\r\n                    navigator.clipboard.writeText(copyString)\r\n                    setIsCopied(true)\r\n                    setTimeout(() => setIsCopied(false), 4000)\r\n                  }}\r\n                  isCopied={isCopied}\r\n                />\r\n              )}\r\n              {tokens.map((line, i) => {\r\n                let props = {}\r\n\r\n                if (isTerminal) {\r\n                  props['data-prepend'] = getTerminalCommands(\r\n                    i,\r\n                    commands,\r\n                    codeString\r\n                  )\r\n                } else if (showLineNums) {\r\n                  props['data-line-number'] = `${(\r\n                    (parseInt(start) + i).toString() + '    '\r\n                  ).slice(0, 4)}`\r\n                }\r\n\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    {...getLineProps({ line, key: i })}\r\n                    className={clsx({\r\n                      [styles.line]: true,\r\n                      [styles.noIndent]: hideGutter,\r\n                      [styles.addLine]: adding.includes(i + 1),\r\n                      [styles.removeLine]: removing.includes(i + 1),\r\n                      [styles.highlightLine]: allHighlighted.includes(i + 1)\r\n                    })}\r\n                    {...props}\r\n                  >\r\n                    {line.map((token, key) => (\r\n                      <span key={key} {...getTokenProps({ token, key })} />\r\n                    ))}\r\n                  </div>\r\n                )\r\n              })}\r\n              {isTerminal && output && (\r\n                <div>\r\n                  <hr />\r\n                  {output}\r\n                </div>\r\n              )}\r\n            </pre>\r\n          )}\r\n        </Highlight>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getCopyString = (copyExclude, codeString) =>\r\n  copyExclude.length\r\n    ? codeString\r\n        .split('\\n')\r\n        .filter((x, i) => copyExclude.includes(i + 1))\r\n        .join('\\n')\r\n    : codeString\r\n\r\nconst getTerminalCommands = (i, commands, codeString) =>\r\n  codeString.split('\\n').length === 1 || commands.includes(i + 1)\r\n    ? '$ │   '\r\n    : '  │   '\r\n\r\nexport default Code\r\n","// extracted by mini-css-extract-plugin\nexport var addLine = \"Code-module--add-line--8zXe6\";\nexport var button = \"Code-module--button--hb3UW\";\nexport var codeContainer = \"Code-module--code-container--DmPR3\";\nexport var component = \"Code-module--component--x-DCD\";\nexport var filename = \"Code-module--filename--R9ejA\";\nexport var highlightLine = \"Code-module--highlight-line--420OH\";\nexport var language = \"Code-module--language--R4A4q\";\nexport var line = \"Code-module--line--480g0\";\nexport var noIndent = \"Code-module--no-indent--WL3WD\";\nexport var removeLine = \"Code-module--remove-line--+fGlu\";","import * as React from 'react'\r\nimport { graphql, Link } from 'gatsby'\r\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\r\nimport { MDXProvider } from '@mdx-js/react'\r\nimport kebabCase from 'lodash.kebabcase'\r\nimport Code from '@components/Code'\r\n\r\nconst BlogPost = ({ data }) => {\r\n  return (\r\n    <>\r\n      <TagList tags={data.mdx.frontmatter.tags} />\r\n      <MDXProvider components={components}>\r\n        <p>{data.mdx.frontmatter.date}</p>\r\n        <MDXRenderer>{data.mdx.body}</MDXRenderer>\r\n      </MDXProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nconst TagList = ({ tags }) => (\r\n  <ul style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n    {tags.map((tag) => (\r\n      <li style={{ margin: 8, listStyle: 'none' }}>\r\n        <Link to={`/tags/${kebabCase(tag)}`}>{tag}</Link>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n)\r\n\r\nexport const query = graphql`\r\n  query ($id: String) {\r\n    mdx(id: { eq: $id }) {\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM D, YYYY\")\r\n        tags\r\n      }\r\n      slug\r\n      body\r\n    }\r\n  }\r\n`\r\n\r\nconst components = {\r\n  pre: (preProps) => {\r\n    if (preProps.children?.props?.mdxType === 'code') {\r\n      const {\r\n        children: codeString,\r\n        className = '',\r\n        ...props\r\n      } = preProps.children.props\r\n\r\n      const match = className.match(/language-([\\0-\\uFFFF]*)/)\r\n\r\n      return (\r\n        <Code\r\n          {...props}\r\n          codeString={codeString.trim()}\r\n          className={className}\r\n          language={match != null ? match[1] : ''}\r\n        />\r\n      )\r\n    }\r\n\r\n    return <pre {...preProps} />\r\n  }\r\n}\r\n\r\nexport default BlogPost\r\n","var React = require('react');\n\nfunction Icon (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"g\",{\"key\":0},[React.createElement(\"path\",{\"style\":{\"fill\":\"#A88D63\"},\"d\":\"M328.935,354.585c0,12.138-9.932,22.069-22.07,22.069H74.569c-12.138,0-22.069-9.932-22.069-22.069\\r\\n\\t\\tV68.047c0-12.138,9.932-22.069,22.069-22.069h232.295c12.139,0,22.07,9.932,22.07,22.069v286.538H328.935z\",\"key\":0}),React.createElement(\"path\",{\"style\":{\"fill\":\"#3E4A57\"},\"d\":\"M242.18,30.623h-32.862c1.504-2.892,2.367-6.171,2.367-9.657C211.686,9.388,202.296,0,190.716,0\\r\\n\\t\\tc-11.581,0-20.966,9.388-20.966,20.966c0,3.486,0.863,6.766,2.368,9.657h-32.862c-9.105,0-16.553,7.447-16.553,16.552v24.552\\r\\n\\t\\tH258.73V47.175C258.73,38.07,251.281,30.623,242.18,30.623z M190.716,28.611c-4.222,0-7.645-3.423-7.645-7.646\\r\\n\\t\\tc0-4.22,3.423-7.643,7.645-7.643c4.224,0,7.645,3.423,7.645,7.643C198.36,25.188,194.939,28.611,190.716,28.611z\",\"key\":1}),React.createElement(\"path\",{\"style\":{\"fill\":\"#CAA977\"},\"d\":\"M324.153,354.585c0,12.138-9.932,22.069-22.07,22.069H69.788c-12.139,0-22.07-9.932-22.07-22.069\\r\\n\\t\\tV68.047c0-12.138,9.932-22.069,22.07-22.069h232.295c12.139,0,22.07,9.932,22.07,22.069V354.585z\",\"key\":2}),React.createElement(\"rect\",{\"x\":\"70.803\",\"y\":\"65.232\",\"style\":{\"fill\":\"#E8E8E8\"},\"width\":\"230.264\",\"height\":\"279.886\",\"key\":3}),React.createElement(\"g\",{\"key\":4},[React.createElement(\"path\",{\"style\":{\"fill\":\"#5C6670\"},\"d\":\"M237.396,30.623h-32.861c1.504-2.892,2.367-6.171,2.367-9.657C206.902,9.388,197.516,0,185.938,0\\r\\n\\t\\t\\tc-11.581,0-20.969,9.388-20.969,20.966c0,3.486,0.863,6.766,2.367,9.657h-32.862c-9.102,0-16.553,7.447-16.553,16.552v24.552\\r\\n\\t\\t\\th136.029V47.175C253.949,38.07,246.501,30.623,237.396,30.623z M185.938,28.611c-4.226,0-7.646-3.423-7.646-7.646\\r\\n\\t\\t\\tc0-4.22,3.421-7.643,7.646-7.643c4.222,0,7.646,3.423,7.646,7.643C193.582,25.188,190.158,28.611,185.938,28.611z\",\"key\":0}),React.createElement(\"path\",{\"style\":{\"fill\":\"#A4A9AD\"},\"d\":\"M185.938,4.966c-8.839,0-16.003,7.165-16.003,16c0,8.839,7.164,16.003,16.003,16.003\\r\\n\\t\\t\\tc8.838,0,16-7.164,16-16.003C201.938,12.131,194.774,4.966,185.938,4.966z M185.938,28.611c-4.226,0-7.646-3.423-7.646-7.646\\r\\n\\t\\t\\tc0-4.22,3.421-7.643,7.646-7.643c4.222,0,7.646,3.423,7.646,7.643C193.582,25.188,190.158,28.611,185.938,28.611z\",\"key\":1}),React.createElement(\"line\",{\"style\":{\"fill\":\"none\",\"stroke\":\"#A4A9AD\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"strokeMiterlimit\":\"10\"},\"x1\":\"127.082\",\"y1\":\"57.381\",\"x2\":\"244.786\",\"y2\":\"57.381\",\"key\":2}),React.createElement(\"line\",{\"style\":{\"fill\":\"none\",\"stroke\":\"#A4A9AD\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"strokeMiterlimit\":\"10\"},\"x1\":\"150.505\",\"y1\":\"48.185\",\"x2\":\"221.368\",\"y2\":\"48.185\",\"key\":3})]),React.createElement(\"g\",{\"key\":5},[React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"102.159\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"183.178\",\"height\":\"11.132\",\"key\":0}),React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"128.644\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"156.695\",\"height\":\"11.13\",\"key\":1}),React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"155.128\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"183.178\",\"height\":\"11.13\",\"key\":2}),React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"181.611\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"156.695\",\"height\":\"11.13\",\"key\":3}),React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"208.094\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"183.178\",\"height\":\"11.131\",\"key\":4}),React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"234.578\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"156.695\",\"height\":\"11.13\",\"key\":5}),React.createElement(\"rect\",{\"x\":\"92.875\",\"y\":\"261.061\",\"style\":{\"fill\":\"#A4A9AD\"},\"width\":\"183.178\",\"height\":\"11.131\",\"key\":6})])]),React.createElement(\"g\",{\"key\":1}),React.createElement(\"g\",{\"key\":2}),React.createElement(\"g\",{\"key\":3}),React.createElement(\"g\",{\"key\":4}),React.createElement(\"g\",{\"key\":5}),React.createElement(\"g\",{\"key\":6}),React.createElement(\"g\",{\"key\":7}),React.createElement(\"g\",{\"key\":8}),React.createElement(\"g\",{\"key\":9}),React.createElement(\"g\",{\"key\":10}),React.createElement(\"g\",{\"key\":11}),React.createElement(\"g\",{\"key\":12}),React.createElement(\"g\",{\"key\":13}),React.createElement(\"g\",{\"key\":14}),React.createElement(\"g\",{\"key\":15})]);\n}\n\nIcon.defaultProps = {\"version\":\"1.1\",\"id\":\"Layer_1\",\"x\":\"0px\",\"y\":\"0px\",\"viewBox\":\"0 0 376.654 376.654\",\"style\":{\"enableBackground\":\"new 0 0 376.654 376.654\"},\"xmlSpace\":\"preserve\"};\n\nmodule.exports = Icon;\n\nIcon.default = Icon;\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["symbolTag","reAsciiWord","reLatin","rsDingbatRange","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsApos","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsModifier","rsOptVar","rsSeq","join","rsEmoji","reApos","RegExp","reComboMark","reUnicodeWord","reHasUnicodeWord","freeGlobal","g","Object","freeSelf","self","root","Function","object","deburrLetter","key","undefined","objectToString","prototype","toString","Symbol","symbolProto","symbolToString","baseToString","value","isObjectLike","call","isSymbol","result","callback","kebabCase","word","index","toLowerCase","string","array","iteratee","accumulator","initAccum","length","arrayReduce","pattern","guard","test","hasUnicodeWord","match","unicodeWords","asciiWords","words","replace","deburr","module","exports","_slicedToArray","_createForOfIteratorHelper","o","allowArrayLike","it","iterator","Array","isArray","minLen","_arrayLikeToArray","n","slice","constructor","name","from","_unsupportedIterableToArray","i","F","s","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","parsePart","m","_step","res","_iterator","split","map","str","trim","push","parseInt","_m2","lhs","sep","rhs","incr","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","useMemo","fullScope","keys","values","fn","createElement","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","indexOf","Prism","lang","uniqueId","plainTextGrammar","_","util","encode","tokens","Token","type","content","alias","objId","obj","defineProperty","clone","deepClone","visited","id","hasOwnProperty","forEach","v","getLanguage","element","exec","className","parentElement","setLanguage","language","classList","add","isActive","defaultActivation","no","contains","languages","plain","plaintext","text","txt","extend","redef","insertBefore","inside","before","insert","grammar","ret","token","newToken","old","DFS","this","property","propertyType","plugins","highlight","env","code","hooks","run","tokenize","stringify","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","node","tail","toArray","all","callbacks","matchedStr","matchPattern","pos","lookbehind","lastIndex","lookbehindLength","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","currentNode","reach","removeCount","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","tag","classes","attributes","aliases","apply","prism","default","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","entity","variable","toBeCopied","shell","clike","c","keyword","modName","cpp","css","addInlined","addAttribute","selectorInside","selector","unit","number","javascript","regex","js","comment","interpolation","coffeescript","coffee","anchorOrAlias","properties","plainKey","createValuePattern","yaml","yml","inner","createInline","tableCell","tableRow","tableLine","markdown","punctuation","walkTokens","l","codeLang","codeBlock","cls","tagPattern","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","String","fromCharCode","md","graphql","validTokens","filter","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","offset","types","open","close","stackHeight","sql","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenizeInterpolationExpression","expression","tempGrammar","args","splice","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","substring","middle","replacement","afterTokens","concat","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","typescript","typeInside","ts","withId","unshift","maybeClassNameTokens","space","braces","spread","re","jsx","stringifyToken","openedTags","notTagNorBrace","pop","openedBraces","plainText","diff","PREFIXES","prefix","git","go","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","tokenizePlaceholders","handlebars","hbs","json","webmanifest","less","makefile","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","scss","stylus","func","tsx","wasm","defaultProps","theme","backgroundColor","color","styles","style","opacity","textDecorationLine","fontStyle","fontWeight","_defineProperty","enumerable","configurable","writable","_extends","assign","arguments","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","create","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Highlight","Component","this$1","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","getStyleForToken","__proto__","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","r","clsx","If","condition","CopyButton","isCopied","title","extractMetadata","raw","rangeParser","getCopyString","copyExclude","codeString","x","getTerminalCommands","commands","copy","file","remove","command","start","isTerminal","setIsCopied","highlighted","adding","removing","excluding","allHighlighted","showLineNums","hideGutter","copyString","position","flexGrow","onClick","navigator","clipboard","writeText","setTimeout","TagList","tags","justifyContent","margin","listStyle","components","pre","preProps","mdxType","data","frontmatter","MDXProvider","date","body","Icon","arrayLikeToArray","__esModule","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","Class","Reflect","construct","bind","a","instance","sham","Proxy","iter","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread"],"sourceRoot":""}