{"version":3,"file":"component---src-pages-blog-mdx-slug-js-f764ab28c405ce933786.js","mappings":"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","sources":["webpack://dev-blog/./node_modules/mdx-utils/index.js","webpack://dev-blog/./node_modules/gatsby-plugin-mdx/index.js","webpack://dev-blog/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://dev-blog/./node_modules/prism-react-renderer/prism/index.js","webpack://dev-blog/./node_modules/prism-react-renderer/dist/index.js","webpack://dev-blog/./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://dev-blog/./node_modules/prism-react-renderer/themes/github/index.js","webpack://dev-blog/./src/components/Code.jsx","webpack://dev-blog/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://dev-blog/./src/pages/blog/{mdx.slug}.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/construct.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack://dev-blog/./node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["var _defineProperty = require(\"/home/runner/work/dev-blog/dev-blog/node_modules/@babel/runtime/helpers/defineProperty.js\");\n\nvar _objectWithoutProperties = require(\"/home/runner/work/dev-blog/dev-blog/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\");\n\nvar _excluded = [\"children\", \"className\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nexports.preToCodeBlock = function (preProps) {\n  if ( // children is code element\n  preProps.children && // code props\n  preProps.children.props && // if children is actually a <code>\n  preProps.children.props.mdxType === \"code\") {\n    // we have a <pre><code> situation\n    var _preProps$children$pr = preProps.children.props,\n        codeString = _preProps$children$pr.children,\n        _preProps$children$pr2 = _preProps$children$pr.className,\n        className = _preProps$children$pr2 === void 0 ? \"\" : _preProps$children$pr2,\n        props = _objectWithoutProperties(_preProps$children$pr, _excluded);\n\n    var match = className.match(/language-([\\0-\\uFFFF]*)/);\n    return _objectSpread({\n      codeString: codeString.trim(),\n      className: className,\n      language: match != null ? match[1] : \"\"\n    }, props);\n  }\n\n  return undefined;\n};","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\nvar Prism = function () {\n  // Private helper vars\n  var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n  var uniqueId = 0; // The grammar object for plaintext\n\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone =\n            /** @type {Record<string, any>} */\n            {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n\n            /** @type {Array} */\n\n            /** @type {any} */\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element) {\n          var m = lang.exec(element.className);\n\n          if (m) {\n            return m[1].toLowerCase();\n          }\n\n          element = element.parentElement;\n        }\n\n        return 'none';\n      },\n\n      /**\n       * Sets the Prism `language-xxxx` class of the given element.\n       *\n       * @param {Element} element\n       * @param {string} language\n       * @returns {void}\n       */\n      setLanguage: function setLanguage(element, language) {\n        // remove all `language-xxxx` classes\n        // (this might leave behind a leading space)\n        element.className = element.className.replace(RegExp(lang, 'gi'), ''); // add the new `language-xxxx` class\n        // (using `classList` will automatically clean up spaces for us)\n\n        element.classList.add('language-' + language);\n      },\n\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function isActive(element, className, defaultActivation) {\n        var no = 'no-' + className;\n\n        while (element) {\n          var classList = element.classList;\n\n          if (classList.contains(className)) {\n            return true;\n          }\n\n          if (classList.contains(no)) {\n            return false;\n          }\n\n          element = element.parentElement;\n        }\n\n        return !!defaultActivation;\n      }\n    },\n\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root ||\n        /** @type {any} */\n        _.languages;\n        var grammar = root[inside];\n        /** @type {Grammar} */\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n\n            var propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  }; // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || '').length | 0;\n  }\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n\n\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n\n\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n\n    return match;\n  }\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n\n\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n        /** @type {RegExp} */\n\n\n        var pattern = patternObj.pattern || patternObj;\n\n        for ( // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          var match;\n\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n\n            if (!match || match.index >= text.length) {\n              break;\n            }\n\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos; // find the node that contains the match\n\n            p += currentNode.value.length;\n\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            } // adjust pos (and p)\n\n\n            p -= currentNode.value.length;\n            pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n            if (currentNode.value instanceof Token) {\n              continue;\n            } // find the last node which is affected by this match\n\n\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n\n            removeCount--; // replace with the new match\n\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n\n            if (!match) {\n              continue;\n            }\n          } // eslint-disable-next-line no-redeclare\n\n\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch); // the reach might have been extended because of the rematching\n\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n\n\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */\n\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n\n    this.tail = tail;\n    this.length = 0;\n  }\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n\n\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n\n\n  function removeRange(list, node, count) {\n    var next = node.next;\n\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n\n\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n\n    return array;\n  }\n\n  return _;\n}();\n\nvar prism = Prism;\nPrism.default = Prism;\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function value(attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' + // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' + // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + ( // constant\n    /NaN|Infinity/.source + '|' + // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' + // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' + // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' + // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\n\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-coffeescript\" */\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-yaml\" */\n\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n/* \"prismjs/components/prism-markdown\" */\n\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n\n      if (code[0] === '#') {\n        var value;\n\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n\n        if (known) {\n          return known;\n        } // unable to decode\n\n\n        return m;\n      }\n    });\n    return text;\n  }\n\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n\n    aliases.push(alias);\n  }\n\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n\n        currentIndex = definitionEnd + 1;\n      }\n\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // sql`...`\n  createTemplate('sql', /\\bsql/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-jsx\" */\n\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [// binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n              walkTokens(token.content);\n            }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [// binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\nexport default prism;","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"atrule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","// Original: https://raw.githubusercontent.com/PrismJS/prism-themes/master/themes/prism-ghcolors.css\nvar theme = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n    style: {\n      color: \"#999988\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"string\", \"attr-value\"],\n    style: {\n      color: \"#e3116c\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#393A34\"\n    }\n  }, {\n    types: [\"entity\", \"url\", \"symbol\", \"number\", \"boolean\", \"variable\", \"constant\", \"property\", \"regex\", \"inserted\"],\n    style: {\n      color: \"#36acaa\"\n    }\n  }, {\n    types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n    style: {\n      color: \"#00a4db\"\n    }\n  }, {\n    types: [\"function\", \"deleted\", \"tag\"],\n    style: {\n      color: \"#d73a49\"\n    }\n  }, {\n    types: [\"function-variable\"],\n    style: {\n      color: \"#6f42c1\"\n    }\n  }, {\n    types: [\"tag\", \"selector\", \"keyword\"],\n    style: {\n      color: \"#00009f\"\n    }\n  }]\n};\nexport default theme;","import React from 'react'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport theme from 'prism-react-renderer/themes/github'\n\nconst CopyButton = (props) => {\n  return (\n    <button\n      style={{\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        margin: '8px',\n        padding: '8px 12px 8px 12px',\n        borderRadius: '8px',\n        borderWidth: 0,\n        background: 'deepskyblue'\n      }}\n      {...props}\n    />\n  )\n}\n\n/**\n * @todo vet this method / write-up clipboard best practice\n */\nconst copyToClipboard = (str) => {\n  const el = document.createElement('textarea')\n  el.value = str\n  el.setAttribute('readonly', '')\n  el.style.position = 'absolute'\n  el.style.left = '-9999px'\n  document.body.appendChild(el)\n  el.select()\n  document.execCommand('copy')\n  document.body.removeChild(el)\n}\n\nconst Code = ({ codeString, language, ...props }) => {\n  const [isCopied, setIsCopied] = React.useState(false)\n\n  return (\n    <Highlight\n      {...defaultProps}\n      code={codeString}\n      language={language}\n      theme={theme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre\n          className={className}\n          style={{ ...style, padding: '20px', position: 'relative' }}\n        >\n          <CopyButton\n            onClick={() => {\n              copyToClipboard(codeString)\n              setIsCopied(true)\n              setTimeout(() => setIsCopied(false), 3000)\n            }}\n          >\n            {isCopied ? <i>Copied!</i> : 'Copy'}\n          </CopyButton>\n\n          {tokens.map((line, i) => (\n            <div key={i} {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  )\n}\n\nexport default Code\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport { MDXProvider } from '@mdx-js/react'\nimport { preToCodeBlock } from 'mdx-utils'\nimport Code from '../../components/Code'\nimport Layout from '../../components/Layout'\n\nconst components = {\n  pre: (preProps) => {\n    const props = preToCodeBlock(preProps)\n\n    if (props) {\n      return <Code {...props} />\n    } else {\n      return <pre {...preProps} />\n    }\n  }\n}\n\nconst BlogPost = ({ data }) => {\n  return (\n    <Layout>\n      <MDXProvider components={components}>\n        <p>{data.mdx.frontmatter.date}</p>\n        <MDXRenderer>{data.mdx.body}</MDXRenderer>\n      </MDXProvider>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n      }\n      body\n    }\n  }\n`\n\nexport default BlogPost\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_defineProperty","_objectWithoutProperties","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","exports","preProps","children","props","mdxType","_preProps$children$pr","codeString","_preProps$children$pr2","className","match","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","trim","language","MDXRenderer","require","module","React","mdx","useMDXScope","scope","mdxScope","End","useMemo","fullScope","values","map","Function","fn","createElement","Prism","lang","uniqueId","plainTextGrammar","_","util","encode","tokens","Token","type","content","alias","Array","isArray","replace","o","prototype","toString","call","slice","objId","obj","value","clone","deepClone","visited","id","hasOwnProperty","v","getLanguage","element","m","exec","toLowerCase","parentElement","setLanguage","RegExp","classList","add","isActive","defaultActivation","no","contains","languages","plain","plaintext","text","txt","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlight","env","code","hooks","run","tokenize","stringify","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","all","name","callbacks","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","currentNode","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","e","tag","classes","attributes","aliases","join","prism","default","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","entity","variable","toBeCopied","shell","clike","c","keyword","modName","cpp","string","css","addInlined","addAttribute","selectorInside","selector","unit","number","javascript","regex","js","comment","interpolation","coffeescript","coffee","anchorOrAlias","properties","plainKey","createValuePattern","yaml","yml","inner","createInline","tableCell","tableRow","tableLine","markdown","punctuation","walkTokens","l","codeLang","codeBlock","cls","tagPattern","parseInt","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","String","fromCharCode","md","graphql","validTokens","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","indexOf","offset","types","open","close","stackHeight","test","sql","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenizeInterpolationExpression","expression","tempGrammar","args","splice","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","substring","middle","replacement","afterTokens","concat","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","typescript","typeInside","ts","withId","unshift","maybeClassNameTokens","space","braces","spread","re","jsx","stringifyToken","openedTags","notTagNorBrace","pop","openedBraces","plainText","diff","PREFIXES","prefix","git","go","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","tokenizePlaceholders","handlebars","hbs","json","webmanifest","less","makefile","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","scss","stylus","func","tsx","wasm","defaultProps","theme","backgroundColor","color","styles","style","opacity","textDecorationLine","fontStyle","fontWeight","configurable","writable","_extends","assign","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","create","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Highlight","Component","this$1","len","undefined","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","getStyleForToken","__proto__","constructor","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","CopyButton","position","top","right","margin","padding","borderRadius","borderWidth","background","excluded","sourceKeys","isCopied","setIsCopied","onClick","el","setAttribute","left","body","appendChild","select","execCommand","removeChild","setTimeout","components","pre","preToCodeBlock","data","Layout","MDXProvider","frontmatter","date","arrayLikeToArray","arr","__esModule","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","Class","Reflect","construct","bind","a","instance","sham","Proxy","iter","Symbol","iterator","TypeError","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread"],"sourceRoot":""}